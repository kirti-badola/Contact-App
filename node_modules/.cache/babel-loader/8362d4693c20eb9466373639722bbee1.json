{"ast":null,"code":"import _toConsumableArray from\"R:/react-projects/contact-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"R:/react-projects/contact-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"R:/react-projects/contact-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./index.css';import\"../node_modules/bootstrap/dist/css/bootstrap.min.css\";// bootstrap\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ContactApp=function ContactApp(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputData=_useState2[0],setInputData=_useState2[1];// for input name\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputEmail=_useState4[0],setInputEmail=_useState4[1];// for input email\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),items=_useState6[0],setItems=_useState6[1];// for add items\nvar _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),toggleSubmit=_useState8[0],setToggleSubmit=_useState8[1];// for toggle button means: change add button to edit button\nvar _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),isEditItem=_useState10[0],setIsEditItem=_useState10[1];// for check edit button id\n// Add items\nvar addItem=function addItem(){if(!inputData&&!inputEmail){alert('Please Fill Your Name & Email Id');}else if(inputData&&inputEmail&&!toggleSubmit){setItems(items.map(function(elem){if(elem.id===isEditItem){return _objectSpread(_objectSpread({},elem),{},{name:inputData,email:inputEmail});}return elem;}));setToggleSubmit(true);setInputData('');setInputEmail('');setIsEditItem(null);}else{var allInputData={id:new Date().getTime().toString(),name:inputData,email:inputEmail};setItems([].concat(_toConsumableArray(items),[allInputData]));setInputData('');setInputEmail('');}};//delete Items\nvar deleteItem=function deleteItem(index){var updateItems=items.filter(function(elem){return index!==elem.id;});setItems(updateItems);};// Edit Items\n// When use click on edit button\n// 1. Get the id and name of the data which user clicked to edit\n// 2. Set the toggle mode to change the submit button into edit button\n// 3. Now update the value of the setInput with the new updated value to edit.\n// 4. To pass the current element Id to new state variable for reference\nvar editItem=function editItem(id){var newEditItem=items.find(function(elem){return elem.id===id;});setToggleSubmit(false);setInputData(newEditItem.name);setInputEmail(newEditItem.email);setIsEditItem(id);};//Remove All Items\nvar removeAll=function removeAll(){setItems([]);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"main_div\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"child_div\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-uppercase heading\",children:\"Contact App\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"addItems mt-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Your Name\",className:\"form-control nameInput\",value:inputData,onChange:function onChange(e){return setInputData(e.target.value);},required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter Your Email\",className:\"form-control EmailInput\",value:inputEmail,onChange:function onChange(e){return setInputEmail(e.target.value);},required:true}),toggleSubmit?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success text-uppercase submit_btn\",onClick:addItem,children:\"Submit\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success text-uppercase update_btn\",onClick:addItem,children:\"Update\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"showItems\",children:items.map(function(elem){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"eachItems mt-4\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[elem.name,\" \",/*#__PURE__*/_jsx(\"br\",{}),\" \",elem.email]}),/*#__PURE__*/_jsxs(\"div\",{className:\"todo_btn\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-pencil-square-o edit_btn\",title:\"Edit Item\",onClick:function onClick(){return editItem(elem.id);}}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-trash delete_btn\",title:\"Delete Item\",onClick:function onClick(){return deleteItem(elem.id);}})]})]},elem.id)});})}),/*#__PURE__*/_jsx(\"div\",{className:\"showItems\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary remove_btn mt-5 text-uppercase\",onClick:removeAll,children:\"Remove All\"})})]})})});};export default ContactApp;","map":{"version":3,"sources":["R:/react-projects/contact-app/src/ContactApp.jsx"],"names":["React","useState","ContactApp","inputData","setInputData","inputEmail","setInputEmail","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","alert","map","elem","id","name","email","allInputData","Date","getTime","toString","deleteItem","index","updateItems","filter","editItem","newEditItem","find","removeAll","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport './index.css';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"; // bootstrap\r\n\r\nconst ContactApp = () => {\r\n\r\n    const[inputData, setInputData] = useState('');  // for input name\r\n    const[inputEmail, setInputEmail] = useState('');  // for input email\r\n    const[items, setItems] = useState([]);  // for add items\r\n    const[toggleSubmit, setToggleSubmit] = useState(true);   // for toggle button means: change add button to edit button\r\n    const[isEditItem, setIsEditItem] = useState(null);       // for check edit button id\r\n\r\n    // Add items\r\n    const addItem = () => {\r\n        if(!inputData && !inputEmail) {\r\n             alert('Please Fill Your Name & Email Id');\r\n             }\r\n        else if(inputData && inputEmail && !toggleSubmit) {\r\n            setItems(\r\n                items.map((elem) => {\r\n                    if(elem.id === isEditItem){\r\n                        return { ...elem, name:inputData, email:inputEmail}\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setToggleSubmit(true);\r\n            setInputData('');\r\n            setInputEmail('');\r\n            setIsEditItem(null);\r\n        }\r\n        else{\r\n            const allInputData = {id: new Date().getTime().toString(), name: inputData, email: inputEmail}\r\n            setItems([...items, allInputData]);\r\n            setInputData('');\r\n            setInputEmail('');\r\n        }\r\n    }\r\n\r\n    //delete Items\r\n    const deleteItem = (index) => {\r\n        const updateItems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n        setItems(updateItems);\r\n    }\r\n\r\n    // Edit Items\r\n    // When use click on edit button\r\n\r\n    // 1. Get the id and name of the data which user clicked to edit\r\n    // 2. Set the toggle mode to change the submit button into edit button\r\n    // 3. Now update the value of the setInput with the new updated value to edit.\r\n    // 4. To pass the current element Id to new state variable for reference\r\n\r\n    const editItem = (id) =>{\r\n        let newEditItem = items.find((elem) =>{\r\n            return elem.id === id\r\n        });\r\n\r\n        setToggleSubmit(false);\r\n        setInputData(newEditItem.name);\r\n        setInputEmail(newEditItem.email);\r\n        setIsEditItem(id);\r\n    }\r\n\r\n    \r\n\r\n    //Remove All Items\r\n    const removeAll = () =>{\r\n        setItems([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main_div\">\r\n                <div className=\"child_div\">\r\n                <h1 className=\"text-uppercase heading\">Contact App</h1>\r\n                {/* Add Items */}\r\n                <div className=\"addItems mt-4\"> \r\n                    <input \r\n                    type=\"text\" \r\n                    placeholder=\"Enter Your Name\" \r\n                    className=\"form-control nameInput\"\r\n                    value={inputData}\r\n                    onChange={(e) => setInputData(e.target.value)}\r\n                    required\r\n                     />\r\n\r\n                     <input \r\n                    type=\"email\" \r\n                    placeholder=\"Enter Your Email\" \r\n                    className=\"form-control EmailInput\"\r\n                    value={inputEmail}\r\n                    onChange={(e) => setInputEmail(e.target.value)}\r\n                    required\r\n                     />\r\n                     {\r\n                         toggleSubmit ? <button className=\"btn btn-success text-uppercase submit_btn\" onClick={addItem}>Submit</button>:\r\n                         <button className=\"btn btn-success text-uppercase update_btn\" onClick={addItem}>Update</button>\r\n                     }\r\n                     \r\n                </div>\r\n\r\n                {/* Show Items */}\r\n                <div className=\"showItems\">\r\n\r\n                {\r\n                    items.map((elem) => {\r\n                        return(\r\n                            <>\r\n                                <div className=\"eachItems mt-4\" key={elem.id}>\r\n                                  <h3>{elem.name} <br /> { elem.email}</h3>\r\n                                 \r\n                                  <div className=\"todo_btn\">\r\n                                    <i className=\"fa fa-pencil-square-o edit_btn\" title=\"Edit Item\" onClick={()=>editItem(elem.id)}></i>\r\n                                    <i className=\"fa fa-trash delete_btn\" title=\"Delete Item\" onClick={()=>deleteItem(elem.id)}></i>\r\n                                  </div>\r\n\r\n                                  </div>\r\n                                  \r\n                              \r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                </div>\r\n\r\n                {/* Clear All List */}\r\n                <div className=\"showItems\">\r\n                    <button \r\n                    className=\"btn btn-primary remove_btn mt-5 text-uppercase\"\r\n                    onClick={removeAll}\r\n                    >Remove All</button>\r\n                </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactApp\r\n"]},"metadata":{},"sourceType":"module"}