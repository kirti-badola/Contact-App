{"ast":null,"code":"var _jsxFileName = \"R:\\\\react-projects\\\\todo-app\\\\src\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './index.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"; // bootstrap\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const [inputData, setInputData] = useState(''); // for input item\n\n  const [items, setItems] = useState([]); // for add items\n\n  const [toggleSubmit, setToggleSubmit] = useState(true); // for toggle button means: change add button to edit button\n  // Add items\n\n  const addItem = () => {\n    if (!inputData) {} else {\n      const allInputData = {\n        id: new Date().getTime().toString(),\n        name: inputData\n      };\n      setItems([...items, allInputData]);\n      setInputData('');\n    }\n  }; //delete Items\n\n\n  const deleteItem = index => {\n    const updateItems = items.filter(elem => {\n      return index !== elem.id;\n    });\n    setItems(updateItems);\n  }; // Edit Items\n  // When use click on edit button\n  // 1. Get the id and name of the data which user clicked to edit\n  // 2. Set the toggle mode to change the submit button into edit button\n  // 3. Now update the value of the setInput with the new updated value to edit.\n  // 4. To pass the current element Id to new state variable for reference\n\n\n  const editItem = id => {\n    let newEditItems = items.find(elem => {\n      return elem.id === id;\n    });\n    setToggleSubmit(false);\n  }; //Remove All Items\n\n\n  const removeAll = () => {\n    setItems([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-uppercase\",\n          children: \"Add Your List Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add Items...\",\n            className: \"form-control  mt-4\",\n            value: inputData,\n            onChange: e => setInputData(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), toggleSubmit ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add_btn\",\n            title: \"Add Item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-trash add_btn\",\n            title: \"Update Item\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(elem => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eachItems\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"mt-5\",\n                  children: elem.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"todo_btn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-pencil-square-o edit_btn\",\n                    title: \"Edit Item\",\n                    onClick: () => editItem(elem.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-trash delete_btn\",\n                    title: \"Delete Item\",\n                    onClick: () => deleteItem(elem.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 35\n                }, this)]\n              }, elem.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-5 w-100 text-uppercase\",\n            onClick: removeAll,\n            children: \"Remove All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo, \"0HdNN2mf3xnekMgVLdhnV2EO0sI=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["R:/react-projects/todo-app/src/Todo.jsx"],"names":["React","useState","Todo","inputData","setInputData","items","setItems","toggleSubmit","setToggleSubmit","addItem","allInputData","id","Date","getTime","toString","name","deleteItem","index","updateItems","filter","elem","editItem","newEditItems","find","removeAll","e","target","value","map"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport './index.css';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"; // bootstrap\r\n\r\nconst Todo = () => {\r\n\r\n    const[inputData, setInputData] = useState('');  // for input item\r\n    const[items, setItems] = useState([]);  // for add items\r\n    const[toggleSubmit, setToggleSubmit] = useState(true);   // for toggle button means: change add button to edit button\r\n\r\n    // Add items\r\n    const addItem = () => {\r\n        if(!inputData) {}\r\n        else{\r\n            const allInputData = {id: new Date().getTime().toString(), name: inputData}\r\n            setItems([...items, allInputData]);\r\n            setInputData('');\r\n        }\r\n    }\r\n\r\n    //delete Items\r\n    const deleteItem = (index) => {\r\n        const updateItems = items.filter((elem) => {\r\n            return index !== elem.id;\r\n        });\r\n        setItems(updateItems);\r\n    }\r\n\r\n    // Edit Items\r\n    // When use click on edit button\r\n\r\n    // 1. Get the id and name of the data which user clicked to edit\r\n    // 2. Set the toggle mode to change the submit button into edit button\r\n    // 3. Now update the value of the setInput with the new updated value to edit.\r\n    // 4. To pass the current element Id to new state variable for reference\r\n\r\n    const editItem = (id) =>{\r\n        let newEditItems = items.find((elem) =>{\r\n            return elem.id === id\r\n        });\r\n\r\n        setToggleSubmit(false);\r\n    }\r\n\r\n    \r\n\r\n    //Remove All Items\r\n    const removeAll = () =>{\r\n        setItems([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main_div\">\r\n                <div className=\"child_div\">\r\n                <h1 className=\"text-uppercase\">Add Your List Here</h1>\r\n                {/* Add Items */}\r\n                <div className=\"addItems\"> \r\n                    <input \r\n                    type=\"text\" \r\n                    placeholder=\"Add Items...\" \r\n                    className=\"form-control  mt-4\"\r\n                    value={inputData}\r\n                    onChange={(e) => setInputData(e.target.value)}\r\n                     />\r\n                     {\r\n                         toggleSubmit ? <i className=\"fa fa-plus add_btn\" title=\"Add Item\" onClick={addItem} ></i> :\r\n                         <i className=\"fa fa-trash add_btn\" title=\"Update Item\" onClick={addItem} ></i>\r\n\r\n                     }\r\n                     \r\n                </div>\r\n\r\n                {/* Show Items */}\r\n                <div className=\"showItems\">\r\n\r\n                {\r\n                    items.map((elem) => {\r\n                        return(\r\n                            <>\r\n                                <div className=\"eachItems\" key={elem.id}>\r\n                                  <h3 className=\"mt-5\">{elem.name}</h3>\r\n                                  <div className=\"todo_btn\">\r\n                                    <i className=\"fa fa-pencil-square-o edit_btn\" title=\"Edit Item\" onClick={()=>editItem(elem.id)}></i>\r\n                                    <i className=\"fa fa-trash delete_btn\" title=\"Delete Item\" onClick={()=>deleteItem(elem.id)}></i>\r\n                                  </div>\r\n                                  \r\n                                </div>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n\r\n                </div>\r\n\r\n                {/* Clear All List */}\r\n                <div className=\"showItems\">\r\n                    <button \r\n                    className=\"btn btn-primary mt-5 w-100 text-uppercase\"\r\n                    onClick={removeAll}\r\n                    >Remove All</button>\r\n                </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}